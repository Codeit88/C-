#include<iostream>
using namespace std;
template<class T>
class Linklist {
	class Node {
		T data;
		Node* next, * prev;
		friend class Linklist<T>;
	public:
		Node() {}
		Node(T data) {
			this->next = this->prev = NULL;
			this->data = data;
		}
	};
private:
	Node* dummy;
public:
	Linklist() {
		dummy = new Node;
		dummy->next = NULL;
	}
	Linklist(Node dummy) {
		this->dummy = dummy;
	}
	void Insertat_at_Head(int val) {
		Node* temp = new Node(val);
		temp->next = dummy->next;
		dummy->next = temp;
	}
	void print() {
		Node* temp = dummy->next;
		while (temp != NULL) {
			cout << temp->data << " -> ";
			temp = temp->next;
		}
		cout << "NULL" << endl;
	}
};
int main() {
	Linklist <int>l1;
	l1.Insertat_at_Head(32);
	l1.Insertat_at_Head(76);
	l1.Insertat_at_Head(55);
	l1.print();
	return 0;
}
